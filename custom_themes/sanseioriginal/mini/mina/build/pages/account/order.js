// Generated by CoffeeScript 2.0.2
(function() {
  var _get_order_style, app, core, deco, restCustomer, restStore, utils;

  core = require('../../core.js');

  deco = require('../../decorators.js');

  utils = require('../../utils.js');

  restStore = require('../../restapi/store.js');

  restCustomer = require('../../restapi/customer.js');

  app = getApp();

  core.Page({
    data: {
      order: null
    },
    submitted: false,
    // lifecycle
    onLoad: deco.login_required(function(opts) {
      var self;
      self = this;
      self.order_id = opts.id;
      app.set_navbar('$order', true);
      return self.load();
    }),
    // methods
    load: function() {
      var self;
      self = this;
      return restCustomer.order.get(self.order_id).then(function(order) {
        return self.setData({
          order: order,
          order_style: _get_order_style(order),
          loaded: true
        });
      });
    },
    copy: function(e) {
      var context;
      context = e.currentTarget.dataset.context;
      if (!context) {
        return;
      }
      return wx.setClipboardData({
        data: context
      });
    },
    call: function() {
      return app.call_service();
    },
    complete_order: function(e) {
      var self;
      self = this;
      if (self.submitted) {
        return;
      }
      return core.dialog.confirm({
        title: e.currentTarget.dataset.confirmTitle,
        confirm: function() {
          self.submitted = true;
          return restCustomer.order.done(self.order_id).then(function(order) {
            return self.setData({
              order: order,
              order_style: _get_order_style(order)
            });
          }).finally(function() {
            return self.submitted = false;
          });
        }
      });
    }
  // helpers
  }, _get_order_style = function(order) {
    if (order.status === -1) {
      return 'warn';
    } else if (order.status === 1) {
      return 'primary';
    } else {
      return 'accent';
    }
  });

}).call(this);
